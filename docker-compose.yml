# Docker Compose file for running Zookeeper, Kafka, and Kafka UI for local development
# Ensure you have Docker and Docker Compose installed
# To start the services, run:
# docker-compose up -d
# To stop the services, run:
# docker-compose down
# Note: Ensure that the `kafka_data` directory exists in the same directory as this docker-compose.yml file
# and contains subdirectories for zookeeper and kafka.
# You can create the necessary directories by running:
# run mkdir -p kafka_data/zookeeper/data kafka_data/kafka/data
# sudo chown -R 1000:1000 kafka_data
# The `config.json` file should also be present in the same directory to configure Kafka UI
# The Kafka UI will be accessible at http://localhost:3000
# You can modify the `config.json` file to change the Kafka UI settings
# The Kafka broker will be accessible at `kafka:9092` from within the Docker network
# and at `localhost:29092` from the host machine.

# Troubleshooting:
# If kafka or zookeeper fails to start
# try deleting the `kafka_data` directory, recreate it with with appropriate permissions,
# and then run `docker-compose up -d` again.


services:
  zookeeper:
    image: docker.io/confluentinc/cp-zookeeper:7.2.15
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - ./kafka_data/zookeeper/data:/var/lib/zookeeper/data

  kafka:
    image: docker.io/confluentinc/cp-kafka:7.2.15
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      # Listeners for both host & container access
      # connect from docker container network using `kafka:9092`
      # connect from host network using `localhost:29092`
      # { ..., "brokers": ["kafka:9092", "localhost:29092"], ... } in config.json
      # will allow both host and container connections
      # docker compose up -d
      # or
      # docker run --network host v$(pwd)/config.json:/app/config.json shantanuterang/simple-kafka-ui
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      # Enable auto topic creation
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      # Set the replication factor for internal topics
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./kafka_data/kafka/data:/var/lib/kafka/data

  kafka-ui:
    # image: docker.io/shantanuterang/simple-kafka-ui:latest
    build:
      context: .
      dockerfile: Dockerfile
    container_name: kafka-ui
    depends_on:
      - kafka
      - zookeeper
    ports:
      - "3000:3000"
    volumes:
      - ./config.json:/app/config.json
